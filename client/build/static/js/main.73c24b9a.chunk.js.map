{"version":3,"sources":["reducers/index.js","reducers/posts.js","components/Form/styles.js","api/index.js","actions/posts.js","constants/actions.js","components/Form/Form.js","styles.js","components/Post/styles.js","components/Post/Post.js","App.js","index.js","images/logo.png"],"names":["reducers","combineReducers","posts","state","action","type","payload","map","post","_id","console","log","createdAt","filter","makeStyles","theme","root","margin","spacing","paper","padding","form","display","flexWrap","justifyContent","fileInput","width","buttonSubmit","marginBottom","url","likePost","id","axios","patch","updatePost","updatedPost","deletePost","delete","createPost","dispatch","a","newPost","data","message","api","Form","currentId","setCurrentId","useState","creator","title","tags","selectedFile","postData","setPostData","useSelector","find","useDispatch","classes","useStyles","useEffect","clear","handleSubmit","e","preventDefault","Paper","className","autoComplete","noValidate","onSubmit","Typography","variant","TextField","name","label","fullWidth","value","onChange","target","multiline","rows","multiple","onDone","base64","Button","color","size","onClick","appBar","borderRadius","flexDirection","alignItems","heading","fontWeight","fontStyle","image","marginLeft","media","height","paddingTop","backgroundColor","border","fullHeightCard","card","position","overlay","top","left","overlay2","right","grid","details","content","cardActions","Post","postSentiment","sentiment","undefined","DateTime","now","elevation","square","CardMedia","fromISO","toLocaleString","DATETIME_SHORT","style","gutterBottom","component","CardContent","options","CardActions","fontSize","likeCount","App","get","Container","maxWidth","AppBar","sx","align","src","logo","alt","Grow","in","Grid","container","item","xs","sm","md","slice","reverse","key","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.73c24b9a.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\nimport posts from './posts';\n\nexport const reducers = combineReducers( {posts: posts});\n","\nexport default (state = [], action) => {\n  switch (action.type) {\n    case 'FETCH_ALL':\n      //When App.js dispatches getPosts(), it goes to actions/posts to dispatch\n      //and calls api/index's fetchPosts(). The returned result (data), which has all the posts  \n      //is then passed thru the second parameter, payload: data with the call to this 'FETCH_ALL'\n      //Therefore we can write return action.payload to return all posts\n      return action.payload;\n    case 'CREATE':\n      //returning all the posts plus the new post, which is in action.payload dispatched by actions/posts\n        return [...state, action.payload];\n    case 'LIKE':\n      return state.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case 'UPDATE':\n      console.log(state.map(post => post.createdAt))\n      return state.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case 'DELETE':\n      return state.filter((post) => post._id !== action.payload);\n    default:\n      return state;\n  }\n};\n\n","\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  fileInput: {\n    width: '97%',\n    margin: '10px 0',\n  },\n  buttonSubmit: {\n    marginBottom: 10,\n  },\n}));\n","import axios from 'axios';\n\nconst url = 'https://sentimedia-web.herokuapp.com/posts';\n\nexport const fetchPosts = () => axios.get(url);\nexport const createPost = (newPost) => axios.post(url, newPost);\nexport const likePost = (id) => axios.patch(`${url}/${id}/likePost`);\nexport const updatePost = (id, updatedPost) => axios.patch(`${url}/${id}`, updatedPost);\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);","\nimport * as api from '../api/index.js';\nimport { CREATE, FETCH_ALL, DELETE, LIKE, UPDATE} from '../constants/actions.js'\n//redux thunk uses syntax: async (dispatch). this allows async operations\n//instead of returning an action, dispatch is needed to execute the action and payload\nexport const getPosts = () => async (dispatch) => {\n  try {\n    //a response is obtained after the api call. can destructure it to {data} directly. \n    //now {data} represents the post itself (equivalent to response.data)\n    const { data } = await api.fetchPosts();\n    //dispatch() takes an action object, which includes {type:, payload:}\n    dispatch({ type: FETCH_ALL, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    const { data } = await api.createPost(post);\n    //console.log(data._id)\n    //console.log(post)\n    //const feedback = await api.fetchSentiment(data._id, post)\n    //console.log(feedback)\n\n    dispatch({ type: CREATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.likePost(id);\n\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await api.deletePost(id);\n\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","\nexport const CREATE = 'CREATE';\nexport const UPDATE = 'UPDATE';\nexport const DELETE = 'DELETE';\nexport const FETCH_ALL = 'FETCH_ALL';\nexport const LIKE = 'LIKE';\n","import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper} from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\n\nimport useStyles from './styles';\nimport { createPost, updatePost} from '../../actions/posts';\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n  const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Editing` : 'What is on your Mind?'}</Typography>\n        <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n        <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  appBar: {\n    borderRadius: 15,\n    margin: '30px 0',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  heading: {\n    color: 'mint',\n    fontWeight: 800,\n    fontStyle: 'italic',\n\n  },\n  image: {\n    marginLeft: '15px',\n  },\n  \n}));\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  media: {\n    height: 0,\n    paddingTop: '56.25%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    //backgroundBlendMode: 'darken',\n  },\n  border: {\n    border: 'solid',\n  },\n  fullHeightCard: {\n    height: '100%',\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    borderRadius: '10px',\n    height: '100%',\n    position: 'relative',\n  },\n  overlay: {\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n  },\n  overlay2: {\n    position: 'absolute',\n    top: '20px',\n    right: '20px',\n  },\n  grid: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '20px',\n  },\n  \n  content: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',}\n    ,\n  cardActions: {\n    padding: '0 16px 8px 16px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n});\n","import React from 'react';\nimport { CardActions, CardContent, CardMedia, Button, Typography, Paper } from '@material-ui/core/';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport { useDispatch } from 'react-redux';\nimport {DateTime} from 'luxon'\n\nimport Twemoji from 'react-twemoji';\n\nimport { likePost, deletePost } from '../../actions/posts';\nimport useStyles from './styles';\n\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\n\nconst Post = ({ post, setCurrentId }) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  let postSentiment = null;\n  if (post.sentiment >= 0 && post.sentiment < 1) postSentiment = '🙂'\n  else if (post.sentiment >=1 && post.sentiment < 2) postSentiment = '😃'\n  else if (post.sentiment >=2 ) postSentiment = '😆'\n  else if (post.sentiment <0 && post.sentiment > -0.5) postSentiment = '😐'\n  else if (post.sentiment <=-0.5 && post.sentiment > -1) postSentiment = '🙁'\n  else if (post.sentiment <=-1 && post.sentiment > -2) postSentiment = '😫'\n  else if (post.sentiment <=-2 ) postSentiment = '🤯'\n  else postSentiment = '🙂'\n\n  if (post.createdAt === undefined) post.createdAt = DateTime.now()\n\n  return (\n    <Paper className={classes.card} elevation = {24} square>\n      <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.title} />\n      <div className={classes.overlay}>\n        <Typography variant=\"h4\">{post.creator}</Typography>\n        <Typography variant=\"body2\">Created on {DateTime.fromISO(post.createdAt).toLocaleString(DateTime.DATETIME_SHORT)}</Typography>\n      </div>\n      <div className={classes.overlay2}>\n        <Button style={{ color: 'primary' }} size=\"small\" onClick={() => setCurrentId(post._id)}>Edit</Button>\n      </div>\n      <div style={{display: 'flex', alignItems: 'center',justifyContent: 'center',}} >\n        <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">\n        {post.title}</Typography> \n      </div>\n      <CardContent>\n        <Typography variant=\"subtitle1\" component=\"p\">{post.message}\n          </Typography>\n        <Twemoji options={{ className: 'twemoji' }} ><p>{postSentiment}</p></Twemoji>      \n      </CardContent>\n      <CardActions className={classes.cardActions}>\n        <Button size=\"small\" color=\"primary\" onClick={() => dispatch(likePost(post._id))}><ThumbUpAltIcon fontSize=\"small\" /> Like {post.likeCount} </Button>\n        <Button size=\"small\" color=\"default\" onClick={() => dispatch(deletePost(post._id))}><DeleteOutlinedIcon /> Delete</Button>\n      </CardActions>\n    </Paper>\n  );\n};\n\nexport default Post;\n","import React, { useState, useEffect } from 'react';\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Form from './components/Form/Form';\nimport { getPosts } from './actions/posts';\nimport useStyles from './styles';\nimport logo from './images/logo.png';\n\nimport Post from './components/Post/Post';\n\n\n\n\nconst App = () => {\n  const [currentId, setCurrentId] = useState(0);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  //useEffect triggers dispatch action. (dispatch is needed in the second para aka. dependency array)\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [currentId, dispatch]);\n\n  const posts = useSelector((state) => state.posts);\n\n\n  return (\n    <Container maxWidth=\"lg\">\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n        <Typography sx = {{fontWeight: 500, fontStyle: 'italic'}} className={classes.heading} variant=\"h2\" align=\"center\">Sentimedia</Typography>\n        <img className={classes.image} src={logo} alt=\"icon\" height=\"60\" />\n\n      </AppBar>\n      <Grow in>\n        <Container>\n        <Grid className={classes.container} container alignItems=\"stretch\" spacing = {3}>\n            <Grid item xs={12} sm={6} md={4}>\n              <Form currentId={currentId} setCurrentId={setCurrentId} />\n            </Grid>\n              {posts.slice(0).reverse().map((post) => (\n                <Grid key = {post._id} item xs={12} sm={6} md={4}>\n                  <Post post={post} setCurrentId={setCurrentId}/>\n                </Grid>\n              ))}\n          </Grid>\n        </Container>\n      </Grow>\n    </Container>\n  );\n};\n\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { reducers } from './reducers';\nimport App from './App';\nimport './index.css';\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.5b9643d8.png\";"],"sourceRoot":""}